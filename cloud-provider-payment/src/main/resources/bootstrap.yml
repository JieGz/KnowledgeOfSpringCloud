server:
  port: 8080

spring:
  application:
    name: cloud-provider-payment
  cloud:
    nacos:
      server-addr: http://nacos.itnaodong.com
      config:
        namespace: DEV_NACE_SPACE
        group: DEV_GROUP
        file-extension: yml
        #通过自定义扩展的 Data Id 配置，既可以解决多个应用间配置共享的问题，又可以支持一个应用有多个配置文件。
        #通过 spring.cloud.nacos.config.extension-configs[n].data-id 的配置方式来支持多个 Data Id 的配置。
        #通过 spring.cloud.nacos.config.extension-configs[n].group 的配置方式自定义 Data Id 所在的组，不明确配置的话，默认是 DEFAULT_GROUP。
        #通过 spring.cloud.nacos.config.extension-configs[n].refresh 的配置方式来控制该 Data Id 在配置变更时，是否支持应用中可动态刷新， 感知到最新的配置值。默认是不支持的。
        #多个 Data Id 同时配置时，他的优先级关系是 spring.cloud.nacos.config.extension-configs[n].data-id 其中 n 的值越大，优先级越高(如果是用横杆来配置,越后面的,优先级越高,和n越大是同一个道理)
        #spring.cloud.nacos.config.extension-configs[n].data-id 的值必须带文件扩展名，文件扩展名既可支持 properties，又可以支持 yaml/yml。 此时 spring.cloud.nacos.config.file-extension 的配置对自定义扩展配置的 Data Id 文件扩展名没有影响。
        #1、Data Id 在默认的组 DEFAULT_GROUP,不支持配置的动态刷新
        extension-configs:
          - data-id: company_info.yml
          # 2、Data Id 不在默认的组，不支持动态刷新
          - data-id: company_member.yml
            group: GLOBAL_GROUP
          # 3、Data Id 既不在默认的组，也支持动态刷新
          - data-id: company_money.yml
            group: REFRESH_GROUP
            refresh: true
        #1、Data Id 在默认的组 DEFAULT_GROUP,不支持配置的动态刷新
        shared-configs:
          - data-id: company_info.yml
          # 2、Data Id 不在默认的组，不支持动态刷新
          - data-id: company_member.yml
            group: GLOBAL_GROUP
          # 3、Data Id 既不在默认的组，也支持动态刷新
          - data-id: company_money.yml
            group: REFRESH_GROUP
            refresh: true
      #Spring Cloud Alibaba Nacos Config 目前提供了三种配置能力从 Nacos 拉取相关的配置。
      #A: 通过 spring.cloud.nacos.config.shared-configs[n].data-id 支持多个共享 Data Id 的配置
      #B: 通过 spring.cloud.nacos.config.extension-configs[n].data-id 的方式支持多个扩展 Data Id 的配置
      #C: 通过内部相关规则(应用名、应用名+ Profile )自动生成相关的 Data Id 配置
      # 当三种方式共同使用时，他们的一个优先级关系是: C > B > A
      discovery:
        namespace: DEV_NACE_SPACE
        group: DEV_GROUP
    sentinel:
      transport:
        port: 8719
        dashboard: http://localhost:8830
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://mysql.itnaodong.com:3306/Payment?useUnicode=true&characterEncoding=utf8&characterSetResults=utf8&useSSL=true
    username: root
    password: pioneerbnxd8888..*..

mybatis:
  mapper-locations: classpath:mapper/*Mapper.xml
  type-aliases-package: com.demo.payment.entites
  configuration:
    #是否开启驼峰命名自动映射，即从经典数据库列名 A_COLUMN 映射到经典 Java 属性名 aColumn。
    map-underscore-to-camel-case: true
#开启SQL语句
logging:
  level:
    com.demo.payment.mapper: DEBUG
